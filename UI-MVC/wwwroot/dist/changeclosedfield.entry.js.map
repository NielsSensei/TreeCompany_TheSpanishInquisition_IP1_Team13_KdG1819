{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./wwwroot/js/changeclosedfield.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,C","file":"changeclosedfield.entry.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./wwwroot/js/changeclosedfield.js\");\n","//console.log(\"changeclosedfield active!\");\r\n\r\nlet addedFieldStrings = 0;\r\n\r\n/**\r\n * @author Niels Van Zandbergen\r\n * @documentation Niels Van Zandbergen\r\n *\r\n * @param index: Index is hier gelijkgesteld aan het aan te passen idee. \r\n * \r\n * Deze row met index is ook het aanspreek punt voor de andere functies.\r\n *\r\n * @returns {HTMLDivElement}\r\n *\r\n */\r\nfunction addDivRow(index){\r\n    let out = document.createElement(\"div\");\r\n    out.classList.add(\"editcontainerRow\");\r\n    out.classList.add(\"row\");\r\n    out.setAttribute(\"id\", index);\r\n\r\n    return out;\r\n}\r\n\r\n\r\n/**\r\n * @author Niels Van Zandbergen\r\n *\r\n * @returns {HTMLDivElement}\r\n *\r\n */\r\nfunction addDivColumn(){\r\n    let out = document.createElement(\"div\");\r\n    out.classList.add(\"editcontainerColumn\");\r\n    out.classList.add(\"col-6\");\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * @author Niels Van Zandbergen\r\n * @documentation Niels Van Zandbergen\r\n *\r\n * @param index: Index is hier gelijkgesteld aan het aan te passen idee.\r\n *\r\n * @returns {HTMLInputElement}\r\n *\r\n */\r\nfunction addInputPart(index){\r\n    let out = document.createElement(\"input\");\r\n    out.setAttribute(\"type\", \"text\");\r\n    out.setAttribute(\"class\", \"form-control\");\r\n    out.classList.add(\"editStringsInput\");\r\n    out.setAttribute(\"id\", index);\r\n    out.setAttribute(\"name\", \"FieldStrings[\" + index + \"]\");\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * @author Niels Van Zandbergen\r\n * @documentation Niels Van Zandbergen\r\n *\r\n * @param index: Index is hier gelijkgesteld aan het aan te passen idee.\r\n *\r\n * @returns {HTMLAnchorElement}\r\n *\r\n */\r\nfunction addRemoveButton(index){\r\n    let out = document.createElement(\"a\");\r\n    out.classList.add(\"btn\");\r\n    out.classList.add(\"btn-danger\");\r\n    out.classList.add(\"destroyEditString\");\r\n    out.innerHTML = \"X\";\r\n    out.setAttribute(\"id\", index);\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * @author Niels Van Zandbergen\r\n * @documentation Niels Van Zandbergen\r\n *\r\n * @param Idea: Idea is hier gelijkgesteld aan het aan te passen idee. \r\n * \r\n * Hier halen we de row van de addDivRow mee op.\r\n *\r\n * @see changeclosedfield.js.addDivRow.\r\n *\r\n * @returns {HTMLDivElement}\r\n *\r\n */\r\nfunction collectContainer(Idea){\r\n    let containers = document.querySelectorAll(\".editContainer\");\r\n    let out = undefined;\r\n\r\n    for(let i = 0; i < containers.length; i++){\r\n        console.log(containers[i].getAttribute(\"id\"));\r\n        if(containers[i].getAttribute(\"id\") === Idea){\r\n            out = containers[i];\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * @authors Sacha Buelens & Niels Van Zandbergen\r\n * @documentation Niels Van Zandbergen\r\n *\r\n * @param Idea: Idea is hier gelijkgesteld aan het aan te passen idee.\r\n * \r\n * Net zoals assignIndexes herziet hem alle indexen binnen dezelfde container om Exceptions te voorkomen.\r\n *\r\n * @see addQuestionnaireQuestion.js.assignIndexes\r\n *\r\n */\r\nfunction redoIndexes(Idea){\r\n    let container = collectContainer(Idea);\r\n    addedFieldStrings = 0;\r\n\r\n    let allInputs =  container.querySelectorAll(\".editStringsInput\");\r\n    let allRemoveButtons = container.querySelectorAll(\".destroyEditString\");\r\n    let allrows = container.querySelectorAll(\".editcontainerRow\");\r\n\r\n    for (let i = 0; i < allInputs.length; i++) {\r\n        addedFieldStrings = i;\r\n\r\n        allInputs[i].setAttribute(\"name\", \"FieldStrings[\" + addedFieldStrings + \"]\");\r\n        allInputs[i].setAttribute(\"id\", addedFieldStrings);\r\n        allrows[i].setAttribute(\"id\", addedFieldStrings);\r\n        allRemoveButtons[i].setAttribute(\"id\", addedFieldStrings);\r\n    }\r\n\r\n    addedFieldStrings = allInputs.length;\r\n\r\n}\r\n\r\n/**\r\n * @authors Sacha Buelens & Niels Van Zandbergen\r\n * @documentation Niels Van Zandbergen\r\n *\r\n * @param Idea: Idea is hier gelijkgesteld aan het aan te passen idee. Dit is ook het aanspreekpunt voor de container\r\n * waar we de closedfieldoption gaan verwijderen.\r\n * @param index: Dit is de index binnen de container.\r\n *\r\n */\r\nfunction destroyClosedFieldPart(Idea, index){\r\n    // console.log(\"Removing element: \" + Idea + \".\" + index);\r\n\r\n    let containerrows = document.querySelectorAll(\".editcontainerRow\");\r\n\r\n    for (let i = 0; i < containerrows.length; i++) {\r\n        if(containerrows[i].getAttribute(\"id\") === index){\r\n            containerrows[i].remove();\r\n        }\r\n    }\r\n\r\n    redoIndexes(Idea);\r\n}\r\n\r\n/**\r\n * @authors Sacha Buelens & Niels Van Zandbergen\r\n * @documentation Niels Van Zandbergen\r\n *\r\n * @param Idea: Idea is hier gelijkgesteld aan het aan te passen idee. Dit is ook het aanspreekpunt voor de container\r\n * waar we de closedfieldoption gaan toevoegen. \r\n * \r\n * Waarom worden er voor elke destroybutton nog eens de eventhandlers toegevoegd? Goede vraag, de reden hiervoor is dat als we \r\n * de modal ophalen voor EditIdea we voor elke option deze ook toevoegen aan de lijst in uniforme stijl met de deze javascript \r\n * maar deze buttons deden voordien niets. \r\n *\r\n */\r\nfunction addClosedFieldPart(Idea){\r\n    let container = collectContainer(Idea);\r\n\r\n    let inputcontainer = addDivRow(addedFieldStrings);\r\n    let leftinputcolumn = addDivColumn();\r\n    let rightinputcolumn = addDivColumn();\r\n    let input = addInputPart(addedFieldStrings);\r\n\r\n    let destroybutton = addRemoveButton(addedFieldStrings);\r\n    destroybutton.addEventListener(\"click\",function(){\r\n        destroyClosedFieldPart(Idea, destroybutton.getAttribute(\"id\"))\r\n    });\r\n\r\n    leftinputcolumn.appendChild(input);\r\n    rightinputcolumn.appendChild(destroybutton);\r\n    inputcontainer.appendChild(leftinputcolumn);\r\n    inputcontainer.appendChild(rightinputcolumn);\r\n    container.appendChild(inputcontainer);\r\n\r\n    addedFieldStrings++;\r\n\r\n    console.log(\"New Part added for: \" + Idea);\r\n}\r\n\r\nconst buttons = document.querySelectorAll(\".newFieldStringsButton\");\r\nfor(let i = 0; i < buttons.length; i++){\r\n    buttons[i].addEventListener(\"click\", function(){\r\n        let id = this.getAttribute(\"id\");\r\n        console.log(\"Editing for: \" + id);\r\n        addClosedFieldPart(id);\r\n    });\r\n}\r\n\r\nconst destroybuttons = document.querySelectorAll(\".destroyEditString\");\r\nfor(let i = 0; i < destroybuttons.length; i++){\r\n    destroybuttons[i].addEventListener(\"click\", function (){\r\n        let idea = this.getAttribute(\"idea\");\r\n        let id = this.getAttribute(\"id\");\r\n        console.log(\"Destroying exisiting part: \" + idea + \".\" + id);\r\n        destroyClosedFieldPart(idea, id);\r\n    });\r\n}"],"sourceRoot":""}