@inject UIMVC.Services.UserService UserService
@inject UserManager<UIMVCUser> UserManager
@using Domain.Identity
@using Domain.UserInput
@using Microsoft.AspNetCore.Identity
@using UIMVC.Services
@model Domain.UserInput.Idea
@inject ProjectService ProjectService

@{
    IdeationQuestion iq = (IdeationQuestion) ViewData["IdeationQuestion"];
}



@if (Model.IsDeleted)
{
    <div class="row">
        <h4>[Verwijderd]</h4>
    </div>
    <hr/>
}
else
{
    <section class="card">
        <div class="card-header pb-0">
            <div class="card-title ">
                <div class="row justify-content-between m-auto">
                    <h4>@Model.Title</h4>
                    <div>
                        @if (Model.VerifiedUser)
                        {
                            <img alt="verified" src="https://image.flaticon.com/icons/svg/148/148839.svg" height="25" width="25"/>
                        }
                        else
                        {
                            <img alt="user" src="https://image.flaticon.com/icons/svg/74/74472.svg" height="25" width="25"/>
                        }
                    </div>
                </div>
                <p>door @UserService.CollectUserName(Model.User.Id)</p>
            </div>
        </div>
        <div class="card-body pb-0">
            <p>@Model.Field.Text</p>
            @if (Model.Cfield != null)
            {
                <ul>
                    @foreach (string o in Model.Cfield.Options)
                    {
                        <li>@o</li>
                    }
                </ul>
            }
            <hr/>
            <section class="row justify-content-between m-auto">
                <div class="row m-1 align-content-center mx-1">
                    <div class="row m-auto px-1">
                        <img alt="Like" src="https://image.flaticon.com/icons/svg/25/25297.svg" height="25" width="25"/>
                        <p>@Model.VoteCount</p>
                    </div>
                    <div class="row m-auto px-1">
                        <img alt="Fblike" src="https://image.flaticon.com/icons/svg/32/32978.svg" height="25" width="25"/>
                        <p>@Model.ShareCount </p>
                    </div>
                    <div class="row m-auto px-1">
                        <img alt="Twitterlike" src="https://image.flaticon.com/icons/svg/32/32727.svg" height="25" width="25"/>
                        <p>@Model.RetweetCount </p>
                    </div>
                    <p>@ViewData["Message"]</p>
                </div>
                <div>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#makeCommentModal@(Model.Id)" >
                        Reageren
                    </button>
                    <a class="btn btn-primary" asp-controller="Platform" asp-action="AddVote" asp-route-idea="@Model.Id" asp-route-user="@UserManager.GetUserId(User)" asp-route-thread="@iq">Stemmen</a>
                </div>
            </section>
        </div>
        <div class="card-footer">
            @foreach (Idea child in ProjectService.CollectThreadIdeas(iq).Where(i => i.ParentIdea.Id == Model.Id))
            {
                @Html.Partial("Thread/_CollectIdea", child)
            }
        </div>
    </section>
}

<section class="modal fade" id="makeCommentModal@(Model.Id)" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                Reageren op @Model.Title
            </div>

            <div class="modal-body m-auto">
                @Html.Partial("Thread/_AddIdea", new AddIdeaModel() {IdeationQuestionID = iq.Id, ParentID = Model.Id})
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</section>